<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SwarmRobotControlAndCommunication"
        xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Name="window" x:Class="SwarmRobotControlAndCommunication.MainWindow"
        Icon="favicon.ico"
        Title="Swarm Robot Control &amp; Communication" Height="360" Width="312" WindowStartupLocation="CenterScreen" Style="{StaticResource MainWindow}"  Loaded="this_Loaded" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <Window.Resources>
        <AlternationConverter x:Key="AlternationConverter"/>
        <System:Double x:Key="ellipseRunningWidth">322</System:Double>

        <!-- /////////////////// Animation Definitions ///////////////////////// -->
        <Storyboard x:Key="ellipseProgressEffectKey" x:Name="ellipseProgressEffect" RepeatBehavior="Forever" BeginTime="0:0:1">
            <DoubleAnimationUsingKeyFrames
								Storyboard.TargetName="ellipseRun1"
								Storyboard.TargetProperty="X"
                                BeginTime="0:0:0"
								Duration="0:0:2">
                <SplineDoubleKeyFrame Value="{StaticResource ellipseRunningWidth}" KeyTime="0:0:2" KeySpline="0.2,0.8 1.0,0.5" />
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames
								Storyboard.TargetName="ellipseRun2"
								Storyboard.TargetProperty="X"
                                BeginTime="0:0:0.2"
								Duration="0:0:2">
                <SplineDoubleKeyFrame Value="{StaticResource ellipseRunningWidth}" KeyTime="0:0:2" KeySpline="0.2,0.8 1.0,0.4" />
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames
								Storyboard.TargetName="ellipseRun3"
								Storyboard.TargetProperty="X"
                                BeginTime="0:0:0.4"
								Duration="0:0:2">
                <SplineDoubleKeyFrame Value="{StaticResource ellipseRunningWidth}" KeyTime="0:0:2" KeySpline="0.2,0.8 1.0,0.3" />
            </DoubleAnimationUsingKeyFrames>

            <DoubleAnimationUsingKeyFrames
								Storyboard.TargetName="ellipseRun4"
								Storyboard.TargetProperty="X"
                                BeginTime="0:0:0.6"
								Duration="0:0:2">
                <SplineDoubleKeyFrame Value="{StaticResource ellipseRunningWidth}" KeyTime="0:0:2" KeySpline="0.2,0.8 1.0,0.2" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>

    <Grid x:Name="grid">
        <Grid.RowDefinitions>
            <RowDefinition Height="23"/>
            <RowDefinition/>
            <RowDefinition Height="22"/>
        </Grid.RowDefinitions>

        <!--Converter={StaticResource SubtractConverter}, ConverterParameter=3-->
        <StatusBar x:Name="statusBarMainWindow" 
                   Grid.Row="2"
                   HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                   HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
                   Margin="0" BorderThickness="1" Height="22" 
                   Width="{Binding Parent.ActualWidth, ElementName=statusBarMainWindow, Mode=OneWay}">
            <StatusBarItem x:Name="statusDeviceAttached" 
                           Content="The control board is not attached" 
                           Background="OrangeRed"
                           Width="{Binding ActualWidth, ElementName=statusBarMainWindow, Mode=OneWay}"
                           BorderBrush="#FFC3681D" BorderThickness="0"
                           Foreground="White" Padding="3,2,3,3"/>
        </StatusBar>

        <Menu x:Name="menu" 
              Grid.Row="0" Grid.RowSpan="2"
              Height="24" Width="310" 
              HorizontalAlignment="Left" VerticalAlignment="Top" 
              HorizontalContentAlignment="Center" VerticalContentAlignment="Center" 
              BorderBrush="#FF1C6DFB" BorderThickness="0,2">
            <MenuItem Header="_View" 
                      MinWidth="10" MinHeight="10" Background="Black">
                <MenuItem x:Name="viewRfMode"
                          Header="RF Mode" 
                          IsCheckable="True" Template="{StaticResource SubMenuItem}"
                          VerticalAlignment="Center"  HorizontalAlignment="Center" 
                          VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                           />
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="aboutMenuItem" 
                          Header="_About" 
                          HorizontalAlignment="Left" 
                          Template="{StaticResource SubMenuItem}"
                          Click="aboutMenuItem_Click" />
            </MenuItem>
        </Menu>

        <TabControl x:Name="mainTab"
                    Grid.Row="1" Margin="0" Width="310" 
                    HorizontalAlignment="Left" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"
                    BorderBrush="Black" BorderThickness="1,0">
            <TabItem x:Name="controlTab" 
                     Header="Control"  
                     Margin="-2,0">
                <Grid Name="gridControl" 
                      Background="White" Margin="0" HorizontalAlignment="Left">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="35.2"/>
                        <RowDefinition x:Name="ProgressBarGrid" Height="33.6"/>
                        <RowDefinition x:Name="ProgramButtonGrid" Height="28"/>
                        <RowDefinition x:Name="ControlButtonGrid" Height="24"/>
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="stackPanelControlButton" HorizontalAlignment="Left" Height="24" Grid.Row="5" VerticalAlignment="Top" Orientation="Horizontal" UseLayoutRounding="True" Grid.IsSharedSizeScope="True" Margin="0,0,-0.2,0" Width="301">
                        <Button x:Name="sleepButton" Content="Sleep" Width="75" Height="{Binding Parent.ActualHeight, ElementName=sleepButton, Mode=OneWay}" Click="sleepButton_Click"/>
                        <Button x:Name="deepsleepButton" Content="Deep Sleep" Width="{Binding ActualWidth, ElementName=sleepButton, Mode=OneWay}" Height="{Binding Parent.ActualHeight, ElementName=pauseButton, Mode=OneWay}" Click="deepsleepButton_Click"/>
                        <Button x:Name="wakeUpButton" Content="Wake Up" Width="{Binding ActualWidth, ElementName=sleepButton, Mode=OneWay}" Height="{Binding Parent.ActualHeight, ElementName=wakeUpButton, Mode=OneWay}" Click="wakeUpButton_Click"/>
                        <Button x:Name="resetButton" Content="Reset" Width="{Binding ActualWidth, ElementName=sleepButton, Mode=OneWay}" Height="{Binding Parent.ActualHeight, ElementName=resetButton, Mode=OneWay}" Click="resetButton_Click"/>
                    </StackPanel>
                    <StackPanel x:Name="stackPanelProgramButton" Grid.Row="4"
                                    Height="{Binding ActualHeight, ElementName=stackPanelControlButton, Mode=OneWay}" Width="301" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,0,-0.2,0">
                        <Button x:Name="startProgramButton"
                                    Content="Start Programming" Width="150" Height="{Binding Parent.ActualHeight, ElementName=wakeUpProgramButton, Mode=OneWay}" Click="startProgramButton_Click" Style="{StaticResource ProgramButton}"/>
                        <Button x:Name="wakeUpProgramButton" 
                                    Content="Wake Up &amp; Program" Width="150" Height="{Binding Parent.ActualHeight, ElementName=resetProgramButton, Mode=OneWay}" Click="wakeUpAndProgramButton_Click" Style="{StaticResource ProgramButton}"/>
                    </StackPanel>
                    <ProgressBar x:Name="progressProgramBar" HorizontalAlignment="Left" Height="10" Margin="0,0.6,-0.2,0" VerticalAlignment="Top" Width="301" Grid.Row="3"/>

                    <Ellipse x:Name="ellipseProgress1" HorizontalAlignment="Left" Height="9" Width="9" Margin="-10,15.6,0,0" Stroke="Black" VerticalAlignment="Top"  RenderTransformOrigin="1,0.5"  Grid.Row="3">
                        <Ellipse.Fill>
                            <RadialGradientBrush RadiusX="0.3" RadiusY="0.3">
                                <GradientStop Color="Black" Offset="0"/>
                                <GradientStop Color="#FFFFFEFE" Offset="1"/>
                                <GradientStop Color="Black" Offset="0.5"/>
                            </RadialGradientBrush>
                        </Ellipse.Fill>
                        <Ellipse.RenderTransform>
                            <TranslateTransform x:Name="ellipseRun1" X="-10" Y="0" />
                        </Ellipse.RenderTransform>
                    </Ellipse>

                    <Ellipse x:Name="ellipseProgress2" Fill="{Binding Fill, ElementName=ellipseProgress1}" HorizontalAlignment="Left" Height="9" Width="9" Margin="-10,15.6,0,0" Stroke="Black" VerticalAlignment="Top"  RenderTransformOrigin="1,0.5"  Grid.Row="3">
                        <Ellipse.RenderTransform>
                            <TranslateTransform x:Name="ellipseRun2" X="-10" Y="0" />
                        </Ellipse.RenderTransform>
                    </Ellipse>

                    <Ellipse x:Name="ellipseProgress3" Fill="{Binding Fill, ElementName=ellipseProgress1}" HorizontalAlignment="Left" Height="9" Width="9" Margin="-10,15.6,0,0" Stroke="Black" VerticalAlignment="Top"  RenderTransformOrigin="1,0.5"  Grid.Row="3">
                        <Ellipse.RenderTransform>
                            <TranslateTransform x:Name="ellipseRun3" X="-10" Y="0" />
                        </Ellipse.RenderTransform>
                    </Ellipse>

                    <Ellipse x:Name="ellipseProgress4" Fill="{Binding Fill, ElementName=ellipseProgress1}" HorizontalAlignment="Left" Height="9" Width="9" Margin="-10,15.6,0,0" Stroke="Black" VerticalAlignment="Top"  RenderTransformOrigin="1,0.5"  Grid.Row="3">
                        <Ellipse.RenderTransform>
                            <TranslateTransform x:Name="ellipseRun4" X="-10" Y="0" />
                        </Ellipse.RenderTransform>
                    </Ellipse>
                    <StackPanel Grid.Row="1" HorizontalAlignment="Left" Height="24" Margin="0,9.4,-11.2,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=window, Mode=OneWay}" Orientation="Horizontal" Grid.RowSpan="2">
                        <Label x:Name="label" Content="HEX File" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Padding="0" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" Height="{Binding Parent.ActualHeight, ElementName=label, Mode=OneWay}" Width="50"/>
                        <TextBox x:Name="pathOfHexFile" Text="" HorizontalAlignment="Center" Height="18" VerticalAlignment="Center" Width="230" VerticalContentAlignment="Center" Margin="0,3" BorderBrush="Black" Style="{DynamicResource PathTextbox}" ScrollViewer.CanContentScroll="True" SnapsToDevicePixels="True" VerticalScrollBarVisibility="Disabled"/>
                        <Button x:Name="loadHexButton" 
                                Content="..." Width="20" Style="{StaticResource PathButton}" Margin="0,3" Click="loadHexButton_Click" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem x:Name="spiTab"
                     Header="SPI Config"
                     Margin="{Binding Margin, ElementName=controlTab}" RenderTransformOrigin="0.5,0.5">
                <Grid Name="gridSPIConfig">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*"/>
                        <ColumnDefinition Width="55*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="configureSPIStack" Margin="5.4,0,-0.2,0" Grid.Row="0" Orientation="Horizontal" FlowDirection="LeftToRight" Grid.Column="1" >
                        <Label Content="Clock Speed" 
                               HorizontalAlignment="Left" VerticalAlignment="Bottom" FlowDirection="LeftToRight" Padding="0,5,5,5" Width="{Binding Width, ElementName=SpiProtocollabel}"/>
                        <TextBox x:Name="spiClockSpeedTextBox" IsEnabled="True" Text="2000000"
                                 local:TextBoxHelpers.IsNumeric="True" local:TextBoxHelpers.MaxValue="20000000" local:TextBoxHelpers.MinValue="500000"
                                 HorizontalAlignment="Center" VerticalContentAlignment="Center" FlowDirection="LeftToRight" 
                                 HorizontalContentAlignment="Right" VerticalAlignment="Center"  Width="{Binding Width, ElementName=SpiProtocolComboBox}" 
                                 Height="20"  Padding="0" Style="{StaticResource PathTextbox}"/>
                        <Label Content="Hz"  HorizontalAlignment="Left" VerticalAlignment="Center" FlowDirection="LeftToRight"/>
                    </StackPanel>
                    <StackPanel x:Name="configureSpiProtocol"
                                Margin="5.4,0,-0.2,0" Grid.Row="1" Orientation="Horizontal" FlowDirection="LeftToRight" Grid.Column="1">
                        <Label x:Name="SpiProtocollabel" IsEnabled="True" Content="Transmit Protocol" 
                               HorizontalAlignment="Left" VerticalAlignment="Bottom" FlowDirection="LeftToRight" Padding="0,5,5,5" Width="100"/>
                        <ComboBox x:Name="SpiProtocolComboBox" SelectedIndex="0"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  Height="20" Width="90" BorderThickness="1"  MinHeight="11" Margin="0,0,0,0" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight" >
                            <ComboBoxItem Content="SPO 0, SPH 0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="SPO 1, SPH 0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="SPO 0, SPH 1" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="SPO 1, SPH 1"/>
                        </ComboBox>
                        <Label IsEnabled="True" Content="Motorola" HorizontalAlignment="Left" VerticalAlignment="Center" FlowDirection="LeftToRight"/>
                    </StackPanel>
                    <StackPanel x:Name="SpiDataWidthStack" Margin="5.4,0,-0.2,0" Grid.Row="2" Orientation="Horizontal" FlowDirection="LeftToRight" Grid.Column="1">
                        <Label x:Name="SpiDataWidth" IsEnabled="False" Content="Data Width"  Width="{Binding Width, ElementName=SpiProtocollabel}"
                               HorizontalAlignment="Left" VerticalAlignment="Bottom" FlowDirection="LeftToRight" Padding="0,5,5,5"/>
                        <TextBox x:Name="SpiDataWidthTextBox" IsEnabled="False" Text="8" Width="{Binding Width, ElementName=SpiProtocolComboBox}" 
                                 HorizontalAlignment="Center" VerticalContentAlignment="Center" FlowDirection="LeftToRight" 
                                 VerticalAlignment="Center" TextWrapping="Wrap"
                                 Height="20"  Padding="0" Margin="0,4"  Style="{StaticResource PathTextbox}" HorizontalContentAlignment="Right"/>
                        <Label IsEnabled="False" Content="bits"  HorizontalAlignment="Left" VerticalAlignment="Center" FlowDirection="LeftToRight"/>
                    </StackPanel>
                    <Button Content="Configure SPI"  Grid.Row="3" Grid.Column="1"
                                Margin="5.4,1,0,1" Height="26" HorizontalAlignment="Left" VerticalAlignment="Center" FlowDirection="LeftToRight" Width="100" Click="configureSPI_Click"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="rfTab" 
                     Header="RF Config" 
                     Margin="{Binding Margin, ElementName=controlTab}">
                <Grid Name="gridRFConfig" HorizontalAlignment="Center" VerticalAlignment="Top">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="148.8"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <StackPanel x:Name="RfMode" Grid.Column="0"
                                Margin="0,2,1.8,2" Grid.Row="0" Orientation="Horizontal" FlowDirection="LeftToRight">
                        <Label x:Name ="lblRFMode" Content="RF Mode"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Width="{Binding Width, ElementName=label1}"/>
                        <ComboBox x:Name="RFModeComboBox"  SelectedIndex="0"
                                  Margin="0,2,5,2" Height="20" Width="70" BorderThickness="1" MinHeight="11" 
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <ComboBoxItem Content="Transmiter" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="Reciever" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel x:Name="ChannelPanel" Grid.Row="2" Grid.Column="0" Margin="0"
                                HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                                Orientation="Horizontal" FlowDirection="LeftToRight" Width="140" Height="28">
                        <Label Content="Channel" 
                               HorizontalAlignment="Left" VerticalAlignment="Center" Width="{Binding Width, ElementName=label1}" Margin="0,1"/>
                        <TextBox x:Name="rfChannelTextBox" Text="0"
                                 local:TextBoxHelpers.IsNumeric="True" local:TextBoxHelpers.MaxValue="125" local:TextBoxHelpers.MinValue="0" VerticalContentAlignment="Center" FlowDirection="LeftToRight" 
                                 VerticalAlignment="Center" TextWrapping="Wrap" Width="{Binding Width, ElementName=RFModeComboBox}" 
                                 Height="20"  Padding="0" Margin="0,4"  Style="{StaticResource PathTextbox}" HorizontalAlignment="Center"/>
                    </StackPanel>
                    <StackPanel x:Name="TxAddressPanel" Grid.Row="1" Grid.Column="0" 
                        Orientation="Horizontal" FlowDirection="LeftToRight" Margin="0,0,1.8,0">
                        <Label x:Name="label1" Content="TX Address" 
                               HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,1" Width="69"/>
                        <TextBox x:Name="TXAdrrTextBox" Text="BEADDE" TextChanged="TXAdrrTextBox_TextChanged"
                        	HorizontalAlignment="Center" VerticalContentAlignment="Center" FlowDirection="LeftToRight" 
                        	VerticalAlignment="Center" TextWrapping="Wrap" Width="{Binding Width, ElementName=RFModeComboBox}" 
                        	Height="20"  Padding="0" Margin="0,4"  Style="{StaticResource PathTextbox}" KeyDown="TXAdrrTextBox_KeyDown"/>
                    </StackPanel>
                    <StackPanel x:Name="DataRatePanel" Grid.Row="3" Grid.Column="0"
                        HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                        Orientation="Horizontal" FlowDirection="LeftToRight" Height="28" Width="140">
                        <Label Content="Data Rate" 
                               HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="{Binding Width, ElementName=label1}"/>
                        <ComboBox x:Name="rfAirRateComboBox"  SelectedIndex="0"
                                  Margin="0,4,5,4" Height="20" Width="{Binding Width, ElementName=RFModeComboBox}" BorderThickness="1" MinHeight="11" 
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <ComboBoxItem Content="1 Mbps" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="2 Mbps" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel x:Name="TXPowerPanel" Grid.Row="4" Grid.Column="0"
                        HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                        Orientation="Horizontal" FlowDirection="LeftToRight" Height="28" Width="140">
                        <Label Content="TX Power" 
                               HorizontalAlignment="Left" Margin="0,2,0,0" Width="{Binding Width, ElementName=label1}"/>
                        <ComboBox x:Name="TXPowerComboBox"  SelectedIndex="3"
                                  Margin="0,4,5,4" Height="20" Width="{Binding Width, ElementName=RFModeComboBox}" BorderThickness="1" MinHeight="11" 
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <ComboBoxItem Content="-18 dBm" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="-12 dBm" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="-6 dBm" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="0 dBm" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel x:Name="Pipe0PayloadPanel" IsEnabled="False" 
                        Grid.Row="0" Grid.Column="1"
                        HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                        Orientation="Horizontal" FlowDirection="LeftToRight" Height="28" Width="165" Margin="0.2,0,-10,0">
                        <StackPanel HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                                    Orientation="Horizontal" FlowDirection="LeftToRight" Width="151">
                            <Label Content="Payload"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,1" Width="{Binding Width, ElementName=label1}"/>
                            <ComboBox x:Name="P0PayloadComboBox"  SelectedIndex="1"
                                  Margin="0,4,5,4" Height="20" Width="{Binding Width, ElementName=RFModeComboBox}" BorderThickness="1" MinHeight="11" 
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" >
                                <ComboBoxItem Content="Static" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                                <ComboBoxItem Content="Dynamic" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel x:Name="PayloadBytesPanel"
                                    HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                                    Orientation="Horizontal" FlowDirection="LeftToRight" Width="151" />
                    </StackPanel>

                    <StackPanel x:Name="Pipe0Panel"  Grid.Row="1" Grid.Column="1" IsEnabled="False"
                                    HorizontalAlignment="Left"  VerticalAlignment="Bottom" Margin="0.2,0,0,0"
                                    Orientation="Horizontal" FlowDirection="LeftToRight" Height="28" Width="155">
                        <Label Content="RX Address"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,1" Width="69"/>
                        <TextBox x:Name="Pipe0TextBox" Text="BEADDE" IsReadOnly="True"
                        	HorizontalAlignment="Center" VerticalContentAlignment="Center" FlowDirection="LeftToRight" 
                        	VerticalAlignment="Center" TextWrapping="Wrap" Width="{Binding Width, ElementName=TXAdrrTextBox}" 
                        	Height="20"  Padding="0" Margin="0,4"  Style="{StaticResource PathTextbox}"/>
                    </StackPanel>
                    <StackPanel x:Name="CRCPanel" Grid.Row="2" Grid.Column="1" Margin="0.2,0,0,0"
                                HorizontalAlignment="Left"  VerticalAlignment="Bottom" 
                                Orientation="Horizontal" FlowDirection="LeftToRight" Width="140" Height="28">
                        <Label Content="RX CRC" Width="{Binding Width, ElementName=label1}"
                               HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox x:Name="rfCRCComboBox"  SelectedIndex="2"
                                  Margin="0,4,5,4" Height="20" Width="{Binding Width, ElementName=RFModeComboBox}" BorderThickness="1" MinHeight="11" 
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center" >
                            <ComboBoxItem Content="OFF" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="1 Byte" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                            <ComboBoxItem Content="2 Bytes" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel x:Name="defaultPanel" Grid.Column="1"
                                Margin="0.2,2,0,2" Grid.Row="3" Orientation="Horizontal" FlowDirection="LeftToRight">
                        <Label x:Name ="LNAlabel" Content="LNA"
                               HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,3,0"/>
                        <CheckBox x:Name="LNACheckBox" 
                                  IsChecked="True" Margin="0,3,12,3"
                                  VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                                  HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Button x:Name="rfDefaultButton" Content="Default"
                                Margin="3,0,4,0" Height="26" Width="73"
                                HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="RightToLeft" Style="{DynamicResource ProgramButton}" Click="rfDefaultButton_Click"/>
                    </StackPanel>
                    <Button Content="Configure RF Module" Click="configureRF_Click" Grid.Column="1" Grid.Row="4" 
                            Margin="4.2,1,0,1" Height="26" VerticalAlignment="Center" FlowDirection="RightToLeft" Width="135" HorizontalAlignment="Left"/>
                </Grid>
            </TabItem>
            <TabItem Header="Calibration" Margin="{Binding Margin, ElementName=controlTab}">
                <Grid HorizontalAlignment="Left" Height="238.4" VerticalAlignment="Top" Width="304.8">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="36"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="28"/>
                        <RowDefinition Height="36.8"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <StackPanel x:Name="stackPanel3" Margin="0,0,-0.2,0" VerticalAlignment="Bottom" Height="24" Orientation="Horizontal">
                        <Button x:Name="sendCommandButton" Content="Send Command" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Top" Height="{Binding ActualHeight, ElementName=stackPanel3, Mode=OneWay}" Width="100" Click="sendCommandButton_Click"/>
                        <ComboBox x:Name="commandSelectBox" Width="150" Height="{Binding ActualHeight, ElementName=stackPanel3, Mode=OneWay}" Margin="3,0,0,0" SelectedIndex="0">
                            <ComboBoxItem Content="Test RF Transmister"/>
                            <ComboBoxItem Content="Test RF Receiver"/>
                            <ComboBoxItem Content="Test RF Carrier Detection"/>
                            <ComboBoxItem Content="Toggle All Status Leds"/>
                            <ComboBoxItem Content="Test All Motor Modes"/>
                            <ComboBoxItem Content="Start Sampling Mics Signals"/>
                            <ComboBoxItem Content="Test Speaker"/>
                            <ComboBoxItem Content="Change Motors Speed"/>
                            <ComboBoxItem Content="Get Battery Voltage"/>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel x:Name="motorSpeedStackPanel" Grid.Column="0" Grid.Row="1" Margin="0,0,-0.2,0" VerticalAlignment="Bottom" Height="24" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.CanContentScroll="True">
                        <Label Content="Motor 1 Speed" HorizontalAlignment="Left" Margin="0,0,0,0" Grid.Row="1" VerticalAlignment="Center" Width="90" Height="24"/>
                        <TextBox x:Name="motor1SpeedTextBox"  local:TextBoxHelpers.IsNumeric="True" local:TextBoxHelpers.MaxValue="100" local:TextBoxHelpers.MinValue="0" Text="500" Style="{DynamicResource PathTextbox}" Width="40" VerticalContentAlignment="Center" Padding="2,0,0,0"/>
                        <Label Content="Motor 2 Speed" HorizontalAlignment="Left" Margin="5,0,0,0" Grid.Row="1" VerticalAlignment="Center" Width="90" Height="24"/>
                        <TextBox x:Name="motor2SpeedTextBox"  local:TextBoxHelpers.IsNumeric="True" local:TextBoxHelpers.MaxValue="100" local:TextBoxHelpers.MinValue="0" Text="500" Style="{DynamicResource PathTextbox}" Width="40" VerticalContentAlignment="Center" Padding="2,0,0,0"/>
                    </StackPanel>
                    <StackPanel x:Name="readAdc1StackPanel" Grid.Column="0" Grid.Row="2" Margin="0,0,-0.2,0" VerticalAlignment="Bottom" Height="24" Orientation="Horizontal">
                        <Button x:Name="readAdc1Button" Content="Read ADC 1" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Center" Height="{Binding Height, ElementName=readAdc1StackPanel}" Width="100" Click="readAdc1Button_Click"/>
                        <TextBox x:Name="readAdc1TextBox" Style="{DynamicResource PathTextbox}" VerticalContentAlignment="Center" Padding="2,0,0,0" IsReadOnly="True" Width="200" Height="{Binding Height, ElementName=readAdc1StackPanel}" VerticalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="True" UseLayoutRounding="True" Cursor=""/>
                    </StackPanel>
                    <StackPanel x:Name="readAdc2StackPanel" Grid.Column="0" Grid.Row="3" Margin="0,0,-0.2,0" VerticalAlignment="Bottom" Height="{Binding Height, ElementName=readAdc1StackPanel}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.CanContentScroll="True">
                        <Button x:Name="readAdc2Button" Content="Read ADC 2" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Center" Height="{Binding Height, ElementName=readAdc2StackPanel}" Width="100" Click="readAdc2Button_Click"/>
                        <TextBox x:Name="readAdc2TextBox" Style="{DynamicResource PathTextbox}" VerticalContentAlignment="Center" Padding="2,0,0,0" IsReadOnly="True" Width="200" Height="{Binding Height, ElementName=readAdc2StackPanel}"/>
                    </StackPanel>
                    <StackPanel x:Name="readBatteryVoltage" Grid.Column="0" Grid.Row="4" Margin="0,0,-0.2,0" VerticalAlignment="Bottom" Height="{Binding Height, ElementName=readAdc1StackPanel}" Orientation="Horizontal" CanHorizontallyScroll="True" ScrollViewer.CanContentScroll="True">
                        <Button x:Name="readBatteryVoltageButton" Content="Get Batt Voltage" HorizontalAlignment="Left" Margin="2,0,0,0" VerticalAlignment="Center" Height="{Binding Height, ElementName=readAdc2StackPanel}" Width="100" Click="readBatteryVoltageButton_Click"/>
                        <TextBox x:Name="readBatteryVoltageTextBox" Style="{DynamicResource PathTextbox}" VerticalContentAlignment="Center" Padding="2,0,0,0" IsReadOnly="True" Width="200" Height="{Binding Height, ElementName=readAdc1StackPanel}"/>
                    </StackPanel>

                    <Button x:Name="testDistacneSensingButton" Grid.Row="5" Content="Test Distacne Sensing" HorizontalAlignment="Center" Margin="78,7,76.8,5.8" VerticalAlignment="Center" Height="{Binding Height, ElementName=readAdc1StackPanel}" Width="150" Click="testDistacneSensingButton_Click"/>

                </Grid>
            </TabItem>
        </TabControl>

    </Grid>

</Window>
